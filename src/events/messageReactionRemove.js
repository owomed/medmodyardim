module.exports = async (client, reaction, user) => {
    // BotlarÄ±n kendi tepkilerini gÃ¶z ardÄ± et
    if (user.bot) return;

    try {
        // EÄŸer tepki kÄ±smi (partial) ise, tam objesini getirmeye Ã§alÄ±ÅŸ
        if (reaction.partial) {
            await reaction.fetch();
        }

        // ğŸš¨ Ã–NEMLÄ° EKLEME: MesajÄ± da tam objesine getir!
        // Aksi takdirde message.id okumaya Ã§alÄ±ÅŸÄ±rken TypeError alabilirsiniz.
        if (reaction.message.partial) {
            await reaction.message.fetch();
        }

        const { message, emoji } = reaction;

        // Belirli mesajÄ± kontrol et.
        const MESSAGE_ID = client.config.MESSAGE_ID;
        // ArtÄ±k 'message' nesnesi garanti olarak tam veriye sahip olduÄŸu iÃ§in gÃ¼venle 'message.id' kullanabiliriz.
        if (message.id !== MESSAGE_ID) return;

        // Rol ve emoji eÅŸleÅŸmesini config'ten al
        const ROLE_EMOJI_MAP = client.config.ROLE_EMOJI_MAP;
        const roleId = ROLE_EMOJI_MAP[emoji.name];

        // EÅŸleÅŸen bir rol yoksa dur
        if (!roleId) return;

        // Ãœyeyi getir. EÄŸer kÄ±smi (partial) ise tam objesini getir.
        const guild = message.guild;
        const member = await guild.members.fetch(user.id);

        if (member) {
            const role = guild.roles.cache.get(roleId);
            if (role) {
                // Ãœyeden rolÃ¼ kaldÄ±r
                await member.roles.remove(role);
                console.log(`Rol kaldÄ±rÄ±ldÄ±: ${role.name} (${roleId}) - ${user.tag}`);
            } else {
                console.error(`Rol bulunamadÄ±: ${roleId} (Sunucuda mevcut deÄŸil)`);
            }
        } else {
            console.error('Ãœye bulunamadÄ±:', user.id);
        }
    } catch (error) {
        console.error('Tepki iÅŸlenirken bir hata oluÅŸtu:', error);
        // Hata durumunda DEBUG iÃ§in hangi mesajda ve kimden geldiÄŸini loglamak faydalÄ± olabilir
        // console.error(`Hata DetayÄ±: Mesaj ID: ${reaction.message.id || 'Bilinmiyor'}, KullanÄ±cÄ± ID: ${user.id}`);
    }
};
